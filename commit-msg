#!/usr/bin/env python3

# add-issue-id-hook version 1.1.0
#
# Created by Piotr Betkier
# https://github.com/pbetkier/add-issue-id-hook
# Modified by Krzysztof Kocel
# https://github.com/kkocel/add-issue-id-hook

# you may set this to your custom JIRA project key format
# or explicitly specify a single project name, e.g. 'EXAMPLE'
project_format = '[A-Z][A-Z]+'

# if not using JIRA, set this to your ticket system's issue pattern
issue_pattern = r'{}-[\d]+'.format(project_format)


import subprocess
import sys
import re

def read_current_message():
    with open(sys.argv[1], 'r') as f:
        return f.read()

def write_message(message):
    with open(sys.argv[1], 'w') as f:
        f.write(message)

def contains_message(message):
    return message and not message.isspace()

def remove_editor_help_message(message):
    return message[:message.find("# Please enter the commit message for your changes.")].rstrip()

def read_branch_or_exit():
    try:
        current_ref = subprocess.check_output('git symbolic-ref HEAD', shell=True).decode()
        return current_ref[len('refs/heads/'):]
    except subprocess.CalledProcessError:
        print("add-issue-id-hook: Adding issue id failed. Are you in detached HEAD state?")
        sys.exit()


issue_id_match = re.search(issue_pattern, read_branch_or_exit())
if issue_id_match:
    found_issue_id = issue_id_match.group()
    user_message = remove_editor_help_message(read_current_message())

    lines = user_message.splitlines()
    first_line = lines[0] if lines else ""
    rest_of_message = "\n".join(lines[1:]) if len(lines) > 1 else ""

    if contains_message(user_message) and found_issue_id not in user_message:
        if ':' in first_line:
            colon_index = first_line.index(':')
            type_part = first_line[:colon_index + 1]
            first_line_rest = first_line[colon_index + 1:].lstrip()

            write_message(f"{type_part} {found_issue_id} {first_line_rest}\n{rest_of_message}")
        else:
            if first_line:
                write_message(f"{found_issue_id} {first_line}\n{rest_of_message}")
